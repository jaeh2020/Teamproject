<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="amdn.anywhere.mapper.MemberMapper">
	<resultMap type="Member" id="memberResultMap">
		<result property="memberId" column="member_id"/>
		<result property="memberPw" column="member_pw"/>
		<result property="memberName" column="member_name"/>
		<result property="levelCode" column="level_code"/>
		<result property="memberGender" column="member_gender"/>
		<result property="memberBirth" column="member_birth"/>
		<result property="memberPhone" column="member_phone"/>
		<result property="memberEmail" column="member_email"/>
		<result property="memberRegTime" column="member_reg_time"/>
	</resultMap>
	
	<!-- 레벨이랑 소비자 추가정보랑 -->
	<resultMap type="MemberUser" id="memberUserResultMap">
		<result property="userId" column="user_id"/>
		<result property="msCode" column="ms_code"/>
		<result property="userOrderTotal" column="user_order_total"/>
		<result property="userPoint" column="user_point"/>
		<result property="userEvaluator" column="user_evaluator"/>
		<result property="reportScore" column="report_accu_score"/>
		<association property="membership" javaType="Membership">
			<id property="msCode" column="ms_code"/>
			<result property="msLevel" column="ms_lev"/>
			<result property="msDis" column="ms_dis"/>
			<result property="msStandard" column="ms_standard"/>
		</association>
		<association property="memberUserLike" javaType="MemberUserLike">
			<id property="likeId" column="like_id"/>
			<result property="userLikeCode" column="user_like_code"/>
			<result property="userLikeKey1" column="user_like_key_1"/>
			<result property="userLikeKey2" column="user_like_key_2"/>
			<result property="userLikeKey3" column="user_like_key_3"/>
			<result property="userUnlikeKey1" column="user_unlike_key_1"/>
			<result property="userUnlikeKey2" column="user_unlike_key_2"/>
			<result property="userUnlikeKey3" column="user_unlike_key_3"/>
		</association>
	</resultMap>
	
	<resultMap type="MemberBiz" id="memberBizResultMap">
		<result property="bizCode" column="biz_code"/>
		<result property="memberId" column="member_id"/>
		<result property="bizNum" column="biz_num"/>
		<result property="bizFileAtt" column="biz_file_att"/>
		<result property="bizStatus" column="biz_status"/>
		<result property="confirmId" column="confirm_id"/>
		<result property="bizReTime" column="biz_re_time"/>
		<result property="bizCompTime" column="biz_complete_time"/>
		<association property="statement" javaType="Statement">
			<id property="stateCode" column="state_code"/>
			<result property="mainState" column="main_state"/>
			<result property="stateName" column="state_name"/>
		</association>
	</resultMap>
	
	<!-- 소비자 회원 탈퇴 -->
	<delete id="removeMemberUser" parameterType="String">
		DELETE 
		FROM 
			tb_member_user
		WHERE 
			user_id = #{userId};
	</delete>
	
	<!-- 전체 회원 탈퇴 -->
	<delete id="removeMember" parameterType="String">
		DELETE 
		FROM 
			tb_member 
		WHERE 
			member_id = #{memberId};
	</delete>
	
	<!-- 소비자 추천/비추천 수정 -->
	<update id="modifyUserLike">
		UPDATE tb_member_user_like
		<trim prefix="SET" suffixOverrides=",">
			<if test="userLikeKey1 != null and userLikeKey1 != ''.toString()">
				user_like_key_1 = #{userLikeKey1},
			</if>
			<if test="userLikeKey2 != null and userLikeKey2 != ''.toString()">
				user_like_key_2 = #{userLikeKey2},
			</if>
			<if test="userLikeKey3 != null and userLikeKey3 != ''.toString()">
				user_like_key_3 = #{userLikeKey3},
			</if>
			<if test="userUnlikeKey1 != null and userUnlikeKey1 != ''.toString()">
				user_unlike_key_1 = #{userUnlikeKey1},
			</if>
			<if test="userUnlikeKey2 != null and userUnlikeKey2 != ''.toString()">
				user_unlike_key_2 = #{userUnlikeKey2},
			</if>
			<if test="userUnlikeKey3 != null and userUnlikeKey3 != ''.toString()">
				user_unlike_key_3 = #{userUnlikeKey3},
			</if>
		</trim>
		WHERE 
			user_like_code = #{userLikeCode};
	</update>
	<!-- 소상공인 승인 상태, 승인자 아이디 변경 -->
	<update id="modifyBizConfirm">
		UPDATE tb_member_biz
		<trim prefix="SET" suffixOverrides=",">
			<if test="bizStatus != null and bizStatus != ''.toString()">
				biz_status = #{bizStatus},
			</if>
			<if test="confirmId != null and confirmId != ''.toString()">
				confirm_id = #{confirmId},
			</if>
			<if test="bizCompTime != null and bizCompTime != ''.toString()">
				biz_complete_time = NOW(),
			</if>
		</trim>
		WHERE
			biz_code = #{bizCode};
	</update>
	
	<!-- 소상공인 승인 신청 개인!조회(id) -->
	<select id="getMemberBizInfoById" resultMap="memberBizResultMap">
		SELECT 
			m.biz_code
			, m.member_id
			, m.biz_num
			, m.biz_file_att
			, m.biz_status
			, m.confirm_id
			, m.biz_re_time
			, m.biz_complete_time
			, s.state_code
			, s.main_state
			, s.state_name
		FROM
			tb_member_biz as m
			INNER JOIN
			tb_statement as s
			on
			m.biz_status = s.state_code
		WHERE
			member_id = #{memberId};
	</select>
	
	<!-- 소상공인 승인 신청 개인!조회(code) -->
	<select id="getMemberBizInfoByCode" resultMap="memberBizResultMap">
		SELECT 
			m.biz_code
			, m.member_id
			, m.biz_num
			, m.biz_file_att
			, m.biz_status
			, m.confirm_id
			, m.biz_re_time
			, m.biz_complete_time
			, s.state_code
			, s.main_state
			, s.state_name
		FROM
			tb_member_biz as m
			INNER JOIN
			tb_statement as s
			on
			m.biz_status = s.state_code
		WHERE
			biz_code = #{bizCode};
	</select>
	
	<!-- 소상공인 승인 신청 관리자가!!조회 -->
	<select id="getMemberBizList" resultMap="memberBizResultMap">
		SELECT 
			biz_code
			, m.member_id
			, m.biz_num
			, m.biz_file_att
			, m.biz_status
			, m.confirm_id
			, m.biz_re_time
			, m.biz_complete_time
			, s.state_code
			, s.main_state
			, s.state_name
		FROM
			tb_member_biz as m
			INNER JOIN
			tb_statement as s
			on
			m.biz_status = s.state_code;
	</select>
	
	<!-- 소상공인 승인코드 자동증가 -->
	<select id="getMemberBizCode" resultType="String">
		SELECT
		   CASE
		   WHEN COUNT(1) = 0 THEN 'biz_001'
		   ELSE
		      CONCAT('biz_', LPAD(MAX(CAST(SUBSTRING(biz_code,5,3)AS DECIMAL)+1),3,0))
		   END AS bizCode
		FROM
		   tb_member_biz;
	</select>
	
	<!-- 소상공인 승인 신청 등록 -->
	<insert id="addBizConfirm">
		INSERT INTO tb_member_biz
			(biz_code
			, member_id
			, biz_num
			, biz_file_att
			, biz_status
			, confirm_id
			, biz_re_time
			, biz_complete_time
		)VALUES (
			#{bizCode}
			, #{memberId}
			, #{bizNum}
			, #{bizFileAtt}
			, #{bizStatus}
			, #{confirmId}
			, NOW()
			, NOW());
	</insert>
	
	<!-- 소비자 회원 추가정보 개인조회(레벨이랑 join) -->
	<select id="getMemberUserInfoById" resultMap="memberUserResultMap">
		SELECT 
			m.user_id
			, m.ms_code
			, m.user_order_total
			, m.user_point
			, m.user_evaluator
			, m.report_accu_score
			, s.ms_lev
			, s.ms_dis
			, s.ms_standard
			, l.user_like_code
			, l.like_id
			, l.user_like_key_1
			, l.user_like_key_2
			, l.user_like_key_3
			, l.user_unlike_key_1
			, l.user_unlike_key_2
			, l.user_unlike_key_3
		FROM 
			tb_member_user AS m
			INNER JOIN
			tb_membership_dis AS s
			ON
			m.ms_code = s.ms_code
			INNER JOIN
			tb_member_user_like AS l
			ON
			m.user_id = l.like_id
		WHERE
			user_id = #{userId};
	</select>
	
	<!-- 소비자 회원 추가정보 조회 -->
	<select id="getMemberUserList" parameterType="String" resultMap="memberUserResultMap">
		SELECT 
			m.user_id
			, m.ms_code
			, m.user_order_total
			, m.user_point
			, m.user_evaluator
			, m.report_accu_score
			, s.ms_lev
			, s.ms_dis
			, s.ms_standard
			, l.user_like_code
			, l.like_id
			, l.user_like_key_1
			, l.user_like_key_2
			, l.user_like_key_3
			, l.user_unlike_key_1
			, l.user_unlike_key_2
			, l.user_unlike_key_3
		FROM 
			tb_member_user AS m
			INNER JOIN
			tb_membership_dis AS s
			ON
			m.ms_code = s.ms_code
			INNER JOIN
			tb_member_user_like AS l
			ON
			m.user_id = l.like_id;
	</select>
	
	<!-- 마이페이지 내정보 수정 -->
	<update id="modifyMyInfo" parameterType="Member">
		UPDATE tb_member
		<trim prefix="SET" suffixOverrides=",">
			<if test="memberPw != null and memberPw != ''.toString()">
				member_pw = #{memberPw},
			</if>
			<if test="memberName != null and memberName != ''.toString()">
				member_name = #{memberName},
			</if>
			<if test="memberGender != null and memberGender != ''.toString()">
				member_gender = #{memberGender},
			</if>
			<if test="memberBirth != null and memberBirth != ''.toString()">
				member_birth = #{memberBirth},
			</if>
			<if test="memberPhone != null and memberPhone != ''.toString()">
				member_phone = #{memberPhone},
			</if>
			<if test="memberEmail != null and memberEmail != ''.toString()">
				member_email = #{memberEmail},
			</if>
		</trim>
		WHERE
			member_id = #{memberId};
	</update>
	
	<!-- 로그인, 내정보조회 -->
	<select id="getMemberInfoById" parameterType="String" resultMap="memberResultMap">
		SELECT 
			  member_id
			, member_pw
			, member_name
			, level_code
			, member_gender
			, member_birth
			, member_phone
			, member_email
		FROM 
			tb_member
		WHERE
			member_id = #{memberId};
	</select>
	
	<!-- 회원 전체 목록 조회 (나중에 소상공인 조회로 바뀔예정) -->
	<select id="getMemberList" resultMap="memberResultMap">
		SELECT 
			member_id
			, member_pw
			, member_name
			, level_code
			, member_gender
			, member_birth
			, member_phone
			, member_email
			, member_reg_time
		FROM 
			tb_member;
	</select>
	
	<!-- 소비자 추가정보 등록 -->
	<insert id="addMember03">
		INSERT INTO tb_member_user
			(user_id
			, ms_code
			, user_order_total
			, user_point
			, user_evaluator
			, report_accu_score
		)VALUES (
			#{userId}
			, #{msCode}
			, #{userOrderTotal}
			, #{userPoint}
			, #{userEvaluator}
			, #{reportScore});
	</insert>
	
	<!-- 선호/비선호 선택한거 등록  -->
	<insert id="addMemberUserLike">
		INSERT INTO tb_member_user_like
			(user_like_code
			, like_id
			, user_like_key_1
			, user_like_key_2
			, user_like_key_3
			, user_unlike_key_1
			, user_unlike_key_2
			, user_unlike_key_3
		)VALUES (
			#{userLikeCode}
			, #{likeId}
			, #{userLikeKey1}
			, #{userLikeKey2}	
			, #{userLikeKey3}
			, #{userUnlikeKey1}
			, #{userUnlikeKey2}
			, #{userUnlikeKey3});
	</insert>
	
	<!-- 선호-비선호코드 자동증가 -->
	<select id="getUserLikeCode" resultType="String">
		SELECT
		   CASE
		   WHEN COUNT(1) = 0 THEN 'us_like_001'
		   ELSE
		      CONCAT('us_like_', LPAD(MAX(CAST(SUBSTRING(user_like_code,9,3)AS DECIMAL)+1),3,0))
		   END AS userLikeCode
		FROM
		   tb_member_user_like;
	</select>
	
	<!-- 선호/비선호 선택 카테고리 리스트 불러오기 -->
	<select id="getFoodMainList" resultType="FoodMainCate">
		SELECT 
			main_cate_code		AS mainCateCode
		  , main_cate_name		AS mainCateName
		FROM 
			tb_food_main_cate;
	</select>

	<!-- 소비자, 소상공인 회원 등록 -->
	<insert id="addMember02">
		INSERT INTO tb_member
			(member_id
			, member_pw
			, member_name
			, level_code
			, member_gender
			, member_birth
			, member_phone
			, member_email
			, member_reg_time
		)VALUES (
			  #{memberId}
			, #{memberPw}
			, #{memberName}
			, #{levelCode}
			, #{memberGender}
			, #{memberBirth}
			, #{memberPhone}
			, #{memberEmail}
			, CURDATE());
	</insert>
	
	<!-- id 중복검사 -->
	<select id="idCheck" resultMap="memberResultMap">
		SELECT 
			member_id 
		FROM 
			tb_member
		WHERE
			member_id = #{memberId};
	</select>
</mapper>